<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Steven's Blog]]></title>
  <link href="http://isunix.github.io/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2015-08-10T16:04:32+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Js File Does Not Update]]></title>
    <link href="http://isunix.github.io/blog/2015/08/10/js-file-does-not-update/"/>
    <updated>2015-08-10T16:00:36+08:00</updated>
    <id>http://isunix.github.io/blog/2015/08/10/js-file-does-not-update</id>
    <content type="html"><![CDATA[<p>The problem is: I have to update a js file, say in the dir public_html/js/aa.js. also I have to upate it in another dir, like public_html2/js/aa.js</p>

<p>However aftering changing the file, one works the other still the same.</p>

<p>After exploring for a while, the solutiio is: just change the js file name and change the name where the file is used.</p>

<p>The problem was caused by cache. We can file more by looking at the page:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">http://stackoverflow.com/questions/32414/how-can-i-force-clients-to-refresh-javascript-files</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于溢出的故事]]></title>
    <link href="http://isunix.github.io/blog/2015/08/03/guan-yu-yi-chu-de-gu-shi/"/>
    <updated>2015-08-03T16:36:29+08:00</updated>
    <id>http://isunix.github.io/blog/2015/08/03/guan-yu-yi-chu-de-gu-shi</id>
    <content type="html"><![CDATA[<p>这算是个简短的回忆了吧，记录下来，主要是怕忘记了。</p>

<p>在自己刚工作没几个月的时候，有天早上到公司，冲咖啡，这个时候一个我刚来公司没几天就搭上话的姑娘也来冲咖啡。 她说她想到了一个计算机里的用语，我没回过神来，她说： 溢出。 我这才发现自己冲的咖啡正在溢出了。女生geek其实挺好的。后来的日子不断的发现这个女生挺聪明的，我是望尘莫及的。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Enable Multiple Versions of Python in Pyenv]]></title>
    <link href="http://isunix.github.io/blog/2015/07/28/enable-multiple-versions-of-python-in-pyenv/"/>
    <updated>2015-07-28T15:12:47+08:00</updated>
    <id>http://isunix.github.io/blog/2015/07/28/enable-multiple-versions-of-python-in-pyenv</id>
    <content type="html"><![CDATA[<p>When I am using python installed from pyenv, we can enable different python versions by issuing the following command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">pyenv</span> <span class="k">global</span> <span class="mf">2.7</span><span class="o">.</span><span class="mi">10</span> <span class="mf">3.4</span><span class="o">.</span><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This way we can use python2 and python3.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Linked List Example]]></title>
    <link href="http://isunix.github.io/blog/2015/07/27/python-linked-list-example/"/>
    <updated>2015-07-27T16:21:27+08:00</updated>
    <id>http://isunix.github.io/blog/2015/07/27/python-linked-list-example</id>
    <content type="html"><![CDATA[<p>Will use python linked list to solve the following problem:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="k">class</span> <span class="nc">Node</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">value</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">return</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">LinkedList</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">head</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class="line">        <span class="bp">self</span><span class="o">.</span><span class="n">tail</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">addNode</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
</span><span class="line">        <span class="n">node</span> <span class="o">=</span> <span class="n">Node</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class="line">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">head</span> <span class="o">==</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">head</span> <span class="o">=</span> <span class="n">node</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">tail</span> <span class="o">=</span> <span class="n">node</span>
</span><span class="line">        <span class="k">else</span><span class="p">:</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">tail</span><span class="o">.</span><span class="n">next</span> <span class="o">=</span> <span class="n">node</span>
</span><span class="line">            <span class="bp">self</span><span class="o">.</span><span class="n">tail</span> <span class="o">=</span> <span class="n">node</span>
</span><span class="line">
</span><span class="line">    <span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class="line">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">head</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">            <span class="n">index</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">head</span>
</span><span class="line">            <span class="n">nodeStore</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">index</span><span class="o">.</span><span class="n">value</span><span class="p">)]</span>
</span><span class="line">            <span class="k">while</span> <span class="n">index</span><span class="o">.</span><span class="n">next</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">                <span class="n">index</span> <span class="o">=</span> <span class="n">index</span><span class="o">.</span><span class="n">next</span>
</span><span class="line">                <span class="n">nodeStore</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">index</span><span class="o">.</span><span class="n">value</span><span class="p">))</span>
</span><span class="line">            <span class="k">return</span> <span class="s">&quot;LinkedList  [ &quot;</span> <span class="o">+</span> <span class="s">&quot;-&gt;&quot;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">nodeStore</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot; ]&quot;</span>
</span><span class="line">        <span class="k">return</span> <span class="s">&quot;LinkedList  []&quot;</span>
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">generatedLinkedList</span><span class="p">(</span><span class="n">numArray</span><span class="p">):</span>
</span><span class="line">    <span class="n">linkedlist</span> <span class="o">=</span> <span class="n">LinkedList</span><span class="p">()</span>
</span><span class="line">    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">numArray</span><span class="p">)):</span>
</span><span class="line">        <span class="n">linkedlist</span><span class="o">.</span><span class="n">addNode</span><span class="p">(</span><span class="n">numArray</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
</span><span class="line">    <span class="k">return</span> <span class="n">linkedlist</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Then we will start to solve the problem:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">LinkedList</span> <span class="kn">import</span> <span class="o">*</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">ListsSum</span><span class="p">:</span>
</span><span class="line">    <span class="k">def</span> <span class="nf">addLists</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">l1</span><span class="p">,</span> <span class="n">l2</span><span class="p">):</span>
</span><span class="line">        <span class="n">p1</span> <span class="o">=</span> <span class="n">l1</span><span class="o">.</span><span class="n">head</span>
</span><span class="line">        <span class="n">p2</span> <span class="o">=</span> <span class="n">l2</span><span class="o">.</span><span class="n">head</span>
</span><span class="line">        <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class="line">        <span class="n">linkedlist_sum</span> <span class="o">=</span> <span class="n">LinkedList</span><span class="p">()</span>
</span><span class="line">        <span class="k">while</span> <span class="p">(</span><span class="n">p1</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">p2</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">)</span> <span class="ow">or</span> <span class="p">(</span><span class="n">carry</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">):</span>
</span><span class="line">            <span class="n">dig_sum</span> <span class="o">=</span> <span class="n">carry</span>
</span><span class="line">            <span class="k">if</span> <span class="n">p1</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">                <span class="n">dig_sum</span> <span class="o">+=</span> <span class="n">p1</span><span class="o">.</span><span class="n">value</span>
</span><span class="line">                <span class="n">p1</span> <span class="o">=</span> <span class="n">p1</span><span class="o">.</span><span class="n">next</span>
</span><span class="line">            <span class="k">if</span> <span class="n">p2</span> <span class="o">!=</span> <span class="bp">None</span><span class="p">:</span>
</span><span class="line">                <span class="n">dig_sum</span> <span class="o">+=</span> <span class="n">p2</span><span class="o">.</span><span class="n">value</span>
</span><span class="line">                <span class="n">p2</span> <span class="o">=</span> <span class="n">p2</span><span class="o">.</span><span class="n">next</span>
</span><span class="line">
</span><span class="line">            <span class="n">linkedlist_sum</span><span class="o">.</span><span class="n">addNode</span><span class="p">(</span><span class="n">dig_sum</span><span class="o">%</span><span class="mi">10</span><span class="p">)</span>
</span><span class="line">            <span class="n">carry</span> <span class="o">=</span> <span class="n">dig_sum</span><span class="o">/</span><span class="mi">10</span>
</span><span class="line">        <span class="k">return</span> <span class="n">linkedlist_sum</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class="line">    <span class="n">solution</span> <span class="o">=</span> <span class="n">ListsSum</span><span class="p">()</span>
</span><span class="line">    <span class="n">list1</span> <span class="o">=</span> <span class="n">generatedLinkedList</span><span class="p">([</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
</span><span class="line">    <span class="n">list2</span> <span class="o">=</span> <span class="n">generatedLinkedList</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">4</span><span class="p">])</span>
</span><span class="line">    <span class="k">print</span><span class="p">(</span><span class="n">list1</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span><span class="p">(</span><span class="n">list2</span><span class="p">)</span>
</span><span class="line">    <span class="k">print</span><span class="p">(</span><span class="n">solution</span><span class="o">.</span><span class="n">addLists</span><span class="p">(</span><span class="n">list1</span><span class="p">,</span><span class="n">list2</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tap Method in Ruby]]></title>
    <link href="http://isunix.github.io/blog/2015/07/20/tap-method-in-ruby/"/>
    <updated>2015-07-20T15:31:51+08:00</updated>
    <id>http://isunix.github.io/blog/2015/07/20/tap-method-in-ruby</id>
    <content type="html"><![CDATA[<p>There is a “tap” method in Ruby and I find it is very useful.</p>

<p>The definitionof “tap” in ruby documentaion is:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Yields self to the block, and then returns self. The primary purpose of this method is to “tap into” a method chain, in order to perform operations on intermediate results within the chain.</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Put it anonther way:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">It’s a helper for call chaining. It passes its object into the given block and, after the block finishes, returns the object:</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">an_object</span><span class="o">.</span><span class="n">tap</span> <span class="k">do</span> <span class="o">|</span><span class="n">o</span><span class="o">|</span>
</span><span class="line">  <span class="c1"># do stuff with an_object, which is in o</span>
</span><span class="line"><span class="k">end</span> <span class="c1"># ===&gt; an_object</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Another example:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">hash_table</span><span class="p">(</span><span class="n">numbers</span><span class="p">,</span> <span class="n">target</span><span class="p">)</span>
</span><span class="line">    <span class="o">[].</span><span class="n">tap</span> <span class="k">do</span> <span class="o">|</span><span class="n">result</span><span class="o">|</span>
</span><span class="line">      <span class="nb">hash</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class="line">      <span class="n">numbers</span><span class="o">.</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">n</span><span class="p">,</span> <span class="n">i</span> <span class="o">|</span>
</span><span class="line">        <span class="k">if</span> <span class="n">j</span> <span class="o">=</span> <span class="nb">hash</span><span class="o">[</span><span class="n">target</span> <span class="o">-</span> <span class="n">n</span><span class="o">]</span>
</span><span class="line">          <span class="k">return</span> <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">j</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class="line">        <span class="k">end</span>
</span><span class="line">        <span class="nb">hash</span><span class="o">[</span><span class="n">n</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span>
</span><span class="line">      <span class="k">end</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minutes on Setting Up Emacs on Macos]]></title>
    <link href="http://isunix.github.io/blog/2015/07/02/minutes-on-setting-up-emacs-on-macos/"/>
    <updated>2015-07-02T15:29:18+08:00</updated>
    <id>http://isunix.github.io/blog/2015/07/02/minutes-on-setting-up-emacs-on-macos</id>
    <content type="html"><![CDATA[<ol>
  <li>I am am using gui emacs and I want to it to be started from the command line, then I have to do this:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nb">alias </span><span class="nv">emacs</span><span class="o">=</span><span class="s1">&#39;open -a /Applications/Emacs.app $1&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>I want to change the default font and font size:</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span><span class="nb">set</span>-default-font <span class="s2">&quot;Monaco 28&quot;</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>I want to use evil, after putting it into ~/.emacs.d, also I need to put the folliwng things in to ~/.emacs.d/init.el</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>add-to-list <span class="s1">&#39;load-path &quot;~/.emacs.d/evil&quot;)</span>
</span><span class="line"><span class="s1">(require &#39;</span>evil<span class="o">)</span>
</span><span class="line"><span class="o">(</span>evil-mode 1<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>I am using slime, so I have to put the following things into my ~/.emacs.d/init.el</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="o">(</span>setq inferior-lisp-program <span class="s2">&quot;/usr/local/bin/sbcl&quot;</span><span class="o">)</span>
</span><span class="line"><span class="o">(</span>setq slime-contribs <span class="err">&#39;</span><span class="o">(</span>slime-fancy<span class="o">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tmux:can't Create Socket: Permission Denied]]></title>
    <link href="http://isunix.github.io/blog/2015/06/19/tmux-cant-create-socket-permission-denied/"/>
    <updated>2015-06-19T13:04:00+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/19/tmux-cant-create-socket-permission-denied</id>
    <content type="html"><![CDATA[<p>my tmux’s sockets are output to the dir “~/tmp”, however today I encountered the problem saying “can’t create socket: Permission denied” while I start tmux.</p>

<p>The reason is I have changed the rights on the folder ~/tmp/tmux* , so after the following command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">chmod 700 -R tmux*
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>It is back to normal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find Cgi-bin Dir on a Linux Server]]></title>
    <link href="http://isunix.github.io/blog/2015/06/09/find-cgi-bin-dir-on-a-linux-server/"/>
    <updated>2015-06-09T18:49:22+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/09/find-cgi-bin-dir-on-a-linux-server</id>
    <content type="html"><![CDATA[<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">ps -ef | grep cgi
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>On my server, this will give out the cgi-bin dir.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kill a Tmux Window]]></title>
    <link href="http://isunix.github.io/blog/2015/06/08/kill-a-tmux-window/"/>
    <updated>2015-06-08T12:54:07+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/08/kill-a-tmux-window</id>
    <content type="html"><![CDATA[<p>When we are using tmux and stuck there, we can then follow the following steps to kill the window.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">tmux list-windows
</span><span class="line">tmux <span class="nb">kill</span>-window -t <span class="nv">$window_number</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove Obsolete Packages on Ubuntu]]></title>
    <link href="http://isunix.github.io/blog/2015/06/02/remove-obsolete-packages-on-ubuntu/"/>
    <updated>2015-06-02T10:03:32+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/02/remove-obsolete-packages-on-ubuntu</id>
    <content type="html"><![CDATA[<p>After upgrading ubuntu to a new version, there will be many obsolete packages. To see these packages, you can </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo apt-get upgrade
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>It will list all those obsolete packages.</p>

<p>To autoremove them one by one will be will tedious, we can first copy those packages into a file, like aa.txt, then use the following perl script to do it once:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="k">use</span> <span class="nn">File::</span><span class="n">Slurp</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span> <span class="nv">@modules</span><span class="p">;</span>
</span><span class="line"><span class="k">my</span> <span class="nv">$text</span> <span class="o">=</span> <span class="n">read_file</span><span class="p">(</span><span class="s">&#39;aa.txt&#39;</span><span class="p">,</span> <span class="n">text_ref</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="nv">@modules</span> <span class="o">=</span> <span class="nb">grep</span> <span class="p">{</span><span class="ow">not</span> <span class="sr">/\s+/</span><span class="p">}</span> <span class="nb">split</span><span class="p">(</span><span class="s">&#39;[\s+]&#39;</span><span class="p">,</span> <span class="nv">$text</span><span class="p">);</span>
</span><span class="line"><span class="k">foreach</span> <span class="k">my</span> <span class="nv">$module</span> <span class="p">(</span><span class="nv">@modules</span><span class="p">){</span>
</span><span class="line">	<span class="nb">system</span><span class="p">(</span><span class="s">&quot;sudo apt-get autoremove $module&quot;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Done!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reconfigure Partially Installed Packages in Ubuntu]]></title>
    <link href="http://isunix.github.io/blog/2015/06/01/reconfigure-partially-installed-packages-in-ubuntu/"/>
    <updated>2015-06-01T13:22:30+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/01/reconfigure-partially-installed-packages-in-ubuntu</id>
    <content type="html"><![CDATA[<p>When I try to upgrade my ubuntu version from 14.04 to 14.10, the system rebooted during the upgrade. When I try to login to the gnu desktop, it goes back to the login screen again and again. </p>

<p>So I have to login in using the “tty” terminal by “ctrl+alt+F3”, and then issue the following command:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sudo dpkg --configure -a
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>There maybe something wrong logging in using the mosted updated kernal, so we can choose to log in using an previous version of kernal(provided if is not removed yet]).</p>

<p>Then if we still want to upgrade, we can do it when we successfully log in to the system. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alternative Way to Bypass Problems Met When Rake New_post]]></title>
    <link href="http://isunix.github.io/blog/2015/06/01/alternative-way-to-bypass-problems-met-when-rake-new-post/"/>
    <updated>2015-06-01T11:06:22+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/01/alternative-way-to-bypass-problems-met-when-rake-new-post</id>
    <content type="html"><![CDATA[<p>I met errors while I am issuing the command “rake new_post” add generate a new post. Here is an alternative way to generate new post:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="s2">&quot;new_post[alternative way to bypass problems met when rake new_post]&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>and then we can use the “Mou” app to open the page:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">open</span> <span class="o">-</span><span class="n">a</span> <span class="no">Mou</span> <span class="n">source</span><span class="o">/</span><span class="n">_posts</span><span class="o">/</span><span class="mi">2015</span><span class="o">-</span><span class="mo">06</span><span class="o">-</span><span class="mo">01</span><span class="o">-</span><span class="n">alternative</span><span class="o">-</span><span class="n">way</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">bypass</span><span class="o">-</span><span class="n">problems</span><span class="o">-</span><span class="n">met</span><span class="o">-</span><span class="k">when</span><span class="o">-</span><span class="n">rake</span><span class="o">-</span><span class="kp">new</span><span class="o">-</span><span class="n">post</span><span class="o">.</span><span class="n">markdown</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Login to Mysql Server Without Entering Password]]></title>
    <link href="http://isunix.github.io/blog/2015/06/01/login-to-mysql-server-without-entering-password/"/>
    <updated>2015-06-01T10:58:02+08:00</updated>
    <id>http://isunix.github.io/blog/2015/06/01/login-to-mysql-server-without-entering-password</id>
    <content type="html"><![CDATA[<p>Enter the user name and password in a shell script in the following way will make the login process easier.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">mysql -h <span class="nv">$host</span> -u<span class="nv">$user</span> -p<span class="nv">$pass</span> <span class="nv">$db</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl and lWP]]></title>
    <link href="http://isunix.github.io/blog/2015/01/13/perl-and-lwp/"/>
    <updated>2015-01-13T12:36:47+08:00</updated>
    <id>http://isunix.github.io/blog/2015/01/13/perl-and-lwp</id>
    <content type="html"><![CDATA[<p>This post will keep notes of perl and LWP/LWP::Simple modules.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django Tips]]></title>
    <link href="http://isunix.github.io/blog/2014/12/26/django-tips/"/>
    <updated>2014-12-26T15:43:22+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/26/django-tips</id>
    <content type="html"><![CDATA[<p>The following knowledge tips of Django need to be paid attention to.</p>

<p>1.parse_command_line</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="n">DATABASE_ROUTERS</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">tornado.options</span> <span class="kn">import</span> <span class="n">parse_command_line</span>
</span><span class="line"><span class="n">parse_command_line</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2.declare a class at runtime</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="py"><span class="line"><span class="n">DynamicClass</span> <span class="o">=</span> <span class="nb">type</span><span class="p">(</span><span class="s">&#39;DynamicClass&#39;</span><span class="p">,</span> <span class="p">(),</span> <span class="p">{</span><span class="s">&#39;spam&#39;</span><span class="p">:</span> <span class="s">&#39;eggs&#39;</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Libevent Not Found Error While Install Tmux]]></title>
    <link href="http://isunix.github.io/blog/2014/12/24/libevent-not-found-error-while-install-tmux/"/>
    <updated>2014-12-24T21:13:11+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/24/libevent-not-found-error-while-install-tmux</id>
    <content type="html"><![CDATA[<p>While I was installing tmux on cent-os, I met the error saying that “libevent not found”, something like this. Then I download libevent and install it into the location ‘/home/stsun/local’ dir.</p>

<p>Still I get the error saying that “libevent not found”. I solved the problem by the following way.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nv">DIR</span><span class="o">=</span><span class="s2">&quot;$HOME/local&quot;</span>
</span><span class="line">./configure --prefix<span class="o">=</span><span class="nv">$DIR</span> <span class="nv">CFLAGS</span><span class="o">=</span><span class="s2">&quot;-I$DIR/include&quot;</span> <span class="nv">LDFLAGS</span><span class="o">=</span><span class="s2">&quot;-L$DIR/lib&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Since I install libevent with the option, “–prefix=$HOME/local”.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Make Zsh the Default Shell Without Root Access]]></title>
    <link href="http://isunix.github.io/blog/2014/12/24/how-to-make-zsh-the-default-shell-without-root-access/"/>
    <updated>2014-12-24T19:01:06+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/24/how-to-make-zsh-the-default-shell-without-root-access</id>
    <content type="html"><![CDATA[<p>As depicted by the title, this post keeps notes on how to make zsh the default shell without root access. BTW, I am using oh-my-zsh configuration files.</p>

<p>In the .bash_profile, add the following lines,</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line"><span class="nb">export </span><span class="nv">SHELL</span><span class="o">=</span>/bin/zsh
</span><span class="line"><span class="nb">exec</span> /bin/zsh -l
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Where zsh will be your own location of your zsh file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes to Be Take While Using Ssh-keygen]]></title>
    <link href="http://isunix.github.io/blog/2014/12/23/notes-to-be-take-while-using-ssh-keygen/"/>
    <updated>2014-12-23T20:18:10+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/23/notes-to-be-take-while-using-ssh-keygen</id>
    <content type="html"><![CDATA[<p>I encoutered some problems while I was using ssh-keygen, it turns out to be originating from privileges setting up.</p>

<p>The following way turns out to be working.</p>

<p>1.Do not set up your home directory to be “777”, it will not work. I set it to be “755”</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">chmod 755 /home/stsun
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>2.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">chmod 600 authorized_keys
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>3.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">chmod 700 .ssh
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>And then it works well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some Useful Linux Commands]]></title>
    <link href="http://isunix.github.io/blog/2014/12/18/some-useful-linux-commands/"/>
    <updated>2014-12-18T12:33:58+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/18/some-useful-linux-commands</id>
    <content type="html"><![CDATA[<p>I will keep notes of some of the useful Linux commands here.  </p>

<p>1.say you want to find something, we can use the “find” command or the convenient “ack” script.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="sh"><span class="line">find . -iname <span class="s2">&quot;*stsun*&quot;</span> -delete
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This will find all files containing ‘stsun’ and then execute the delete command.</p>

<p>2.awk ‘{print $2 $1}’ text.txt</p>

<p>3.tr ‘[A-Z]’ ‘[a-z]’ &lt; test.txt</p>

<p>4.sed ‘125!d’ text.txt</p>

<p>5.awk ‘NR==125’ text.txt</p>

<p>6.to print out the shebang, do the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"> <span class="k">my</span> <span class="nv">$interpretr</span> <span class="o">=</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">_</span><span class="p">};</span>
</span><span class="line"> <span class="k">print</span> <span class="nv">$interpreter</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>It will print out the interpreter that runs the script.</p>

<p>7.to cat a file and open it to a filehandle, </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="perl"><span class="line"><span class="nb">open</span> <span class="p">(</span><span class="n">FH</span><span class="p">,</span> <span class="s">&quot;cat $file |&quot;</span><span class="p">)</span> <span class="ow">or</span> <span class="nb">die</span> <span class="s">&quot;can&#39;t open the given file&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<table>
  <tbody>
    <tr>
      <td>Pay attention to the “</td>
      <td>” here, because in normal file opening, it is not needed.</td>
    </tr>
  </tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Study of Bloom Filters and Bloom::Filter Perl Module]]></title>
    <link href="http://isunix.github.io/blog/2014/12/09/study-of-bloom-filters-and-bloom-filter-perl-module/"/>
    <updated>2014-12-09T13:46:30+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/09/study-of-bloom-filters-and-bloom-filter-perl-module</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
