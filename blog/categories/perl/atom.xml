<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Perl | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2014-11-28T15:07:55+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Make Array Into String Using Perl]]></title>
    <link href="http://isunix.github.io/blog/2014/11/27/make-array-into-string-using-perl/"/>
    <updated>2014-11-27T16:49:04+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/27/make-array-into-string-using-perl</id>
    <content type="html"><![CDATA[<p>In perl, there are cases we may want to make an array into string, and then for the string, we may also want to change it to the format that we want to use. Here below are some exaples. </p>

<p>Say we have an array, </p>

<p><code>pl
my @nums = (1234, 5678, 2345, 8976);
</code></p>

<p>And we then want to change it to a string with comma separated followed by a blank space.  </p>

<p><code>pl
my $nums = join ", ", @nums;
</code></p>

<p>We then want to use the nums in a sql “in” clause which will have the format, </p>

<p><code>sql
select * from table where column in (1234, 5678, 2345, 8976);
</code></p>

<p>Of course we can not use the array @nums here, we can change the $nums to the format, </p>

<p><code>pl
$nums_in_str = "(" . join( ",", @nums ) . ")";
</code></p>

<p>Then we can do the sql query as the following:  </p>

<p><code>sql
select * from table where column in $nums_in_str
</code></p>

<p>That’s it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Siting Css in Cgi Script]]></title>
    <link href="http://isunix.github.io/blog/2014/11/26/siting-css-in-cgi-script/"/>
    <updated>2014-11-26T17:09:55+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/26/siting-css-in-cgi-script</id>
    <content type="html"><![CDATA[<p>While writing perl cgi scripts, when we need to add css or js files, there are two ways to add the file, one using absolute path, one using relative path. </p>

<p>First we want to check the document root of our file, we cat get it using the following way. </p>

<p>```pl
#!/usr/bin/env perl</p>

<p>print “Content-type: text/plain; charset=utf-8\n\n”;
print $ENV{DOCUMENT_ROOT};
```</p>

<p>For example, in my case, it gives out the following result:  </p>

<p><code>pl
"/usr/local/www/apache22/data"
</code></p>

<p>We assume that our server name is gopid.com, in the /usr/local/www/apache22/ dir, there are the data dir, cgi-bin dir, we make a sub-dir named steven in the data dir, then we can using the following two ways to site the css and js files.</p>

<p><code>html
&lt;link type="text/css" href="http://isunix.github.io/steven/js/bootstrap/css/bootstrap.min.css" rel="stylesheet"&gt;
&lt;link type="text/css" href="http://isunix.github.io/steven/css/margin.css" rel="stylesheet"&gt;
</code></p>

<p>Or using the absolute path: </p>

<p><code>html
&lt;link type="text/css" href="https://goopig.com/steven/js/bootstrap/css/bootstrap.min.css" rel="stylesheet"&gt;
&lt;link type="text/css" href="https://goopig.com/steven/css/margin.css" rel="stylesheet"&gt;
</code></p>

<p>PS, if we want to print out the whole env infomation using cgi, we can using the following script:  </p>

<p>```pl
#!/usr/local/bin/perl</p>

<p>print “Content-type: text/plain; charset=utf-8\n\n”;
foreach $var (sort(keys(%ENV))) {
    $val = $ENV{$var};
    $val =~ s|\n|\n|g;
    $val =~ s|”|\“|g;
    print “${var}="${val}"\n”;
}
```</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Oddmuse on Macos]]></title>
    <link href="http://isunix.github.io/blog/2014/11/24/install-oddmuse-on-macos/"/>
    <updated>2014-11-24T20:45:59+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/24/install-oddmuse-on-macos</id>
    <content type="html"><![CDATA[<p>I come across this tool through one of my colleagues. And I fell in love with it very soon. Here below are the steps I am using to set up the installation.  </p>

<p>The link for oddmuse is:  </p>

<p><code>html
http://oddmuse.org/
</code></p>

<p>For MacOS user, the link is:  </p>

<p><code>html
http://download.savannah.gnu.org/releases/oddmuse/oddmuse-1.806.dmg
</code></p>

<p>This installation process is very trivial. I will write more about how to use oddmuse later. </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache Setup to Redirect a Site]]></title>
    <link href="http://isunix.github.io/blog/2014/11/24/apache-setup-to-redict-a-site/"/>
    <updated>2014-11-24T14:31:59+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/24/apache-setup-to-redict-a-site</id>
    <content type="html"><![CDATA[<p>While I was developing a dancer application, I usually open a new port, like goople.com:4001. Actually there is a better way to do this. </p>

<p>On our CentOS server, in the httpd.conf file, we include the following piece to it:</p>

<p><code>html
Include etc/apache22/Includes/*.conf
</code>  </p>

<p>If it is not already there.  </p>

<p>Then in the dir,  /usr/local/etc/apache22/Includes, we will write our own configuration file. </p>

<p>Then we can make a file named sun.conf in the Includes dir and write to it something like this:  </p>

<p>```html
Alias /~stsun /home/stsun/public_html</p>

<p>&lt;Directory “/home/stsun/public_html”&gt;
	Options +Indexes FollowSymLinks
	AllowOverride All
	Order allow,deny
	Allow from all
&lt;/Directory&gt;
```</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Print Stderr in Perl]]></title>
    <link href="http://isunix.github.io/blog/2014/11/18/print-stderr-in-perl/"/>
    <updated>2014-11-18T16:52:16+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/18/print-stderr-in-perl</id>
    <content type="html"><![CDATA[<p>I better not write one by myself, there is a very good article on this:  </p>

<p><code>html
http://perlmaven.com/stdout-stderr-and-redirection
</code></p>
]]></content>
  </entry>
  
</feed>
