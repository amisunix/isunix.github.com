<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[catogories：Data&ML&AI | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/data-and-ml-and-ai/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2019-07-04T12:58:42+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Numpy的一些数据处理备忘]]></title>
    <link href="http://isunix.github.io/blog/2019/07/04/numpyde-%5B%3F%5D-xie-shu-ju-chu-li-bei-wang/"/>
    <updated>2019-07-04T11:43:34+08:00</updated>
    <id>http://isunix.github.io/blog/2019/07/04/numpyde-[?]-xie-shu-ju-chu-li-bei-wang</id>
    <content type="html"><![CDATA[<h2 id="numpy">记录numpy中的一些数据处理的方法.</h2>

<p>比如我们通过如下的方式，获取到了iris的数据,</p>

<p>```py
import pandas as pd
import numpy as np
from sklearn.datasets import load_iris</p>

<p>iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)</p>

<p>df.columns = [‘sepal length’, ‘sepal width’, ‘petal length’, ‘petal width’, ‘label’]
```</p>

<p>如果我们想要去取第一列，第二列，和最后一列(label), 可以使用如下的方式:</p>

<p><code>py
data = np.array(df.iloc[:100, [0, 1, -1]])
</code></p>

<p><code>df.shape</code> 是 <code>(150, 5)</code>, <code>data.shape</code> 是 <code>(100, 3)</code></p>

<p><code>data</code> 现在是<code>lists in list</code> 的一个<code>ndarray</code></p>

<p>如果我们想要去取<code>data</code>的每行的前两列， 还有最后一列，可以使用如下的方式:</p>

<p><code>py
X, y = data[:, :-1], data[:, -1]
</code></p>

<p><code>X, y</code> 都是 ndarray. <code>x.shape</code> 是 <code>(100, 2)</code>, <code>y.shape</code> 是 <code>(100,)</code></p>

<p>如果要对标签进行二分类，我们可以使用 python 的 list comprehension:</p>

<p><code>py
y = np.array([1 if i == 1 else -1 for i in y])
</code></p>

<p>这样处理了之后，y 的 shape 还是跟之前是一样的.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Links for Learning ML and SpamAssassin]]></title>
    <link href="http://isunix.github.io/blog/2014/09/15/useful-links-for-learning-ml-and-spamassassin/"/>
    <updated>2014-09-15T10:32:36+08:00</updated>
    <id>http://isunix.github.io/blog/2014/09/15/useful-links-for-learning-ml-and-spamassassin</id>
    <content type="html"><![CDATA[<p>Below are some links I used while I am learning SpamAssassin and machine learning, of course including Bayes.</p>

<p>```
http://blog.sina.com.cn/s/blog_77dc7b520100pzwd.html
http://spamassassin.apache.org/full/3.4.x/doc/Mail_SpamAssassin.html
http://www.jb51.net/article/6214.htm</p>

<p>http://www.baidu.com/index.php?wd=%E8%B4%9D%E5%8F%B6%E6%96%AF&amp;rsv_spt=1&amp;issp=1&amp;rsv_bp=0&amp;ie=utf-8&amp;tn=monline_5_dg&amp;rsv_sug3=7&amp;rsv_sug4=171&amp;rsv_sug1=8&amp;oq=beiyes&amp;rsv_sug2=0&amp;f=3&amp;rsp=0&amp;inputT=6003</p>

<p>http://www.ruanyifeng.com/blog/2011/08/bayesian_inference_part_one.html
http://mindhacks.cn/2008/09/21/the-magical-bayesian-method/
http://mindhacks.cn/2008/09/11/machine-learning-and-ai-resources/
http://en.wikipedia.org/wiki/Herbert_A._Simon
http://en.wikipedia.org/wiki/Machine_learning
http://en.wikipedia.org/wiki/Artificial_intelligence
http://en.wikipedia.org/wiki/History_of_artificial_intelligence
http://en.wikipedia.org/wiki/Unsupervised_learning
http://www.yeeyan.org/articles/view/sylviaangel/9995
http://blog.youxu.info/spell-correct.html
http://en.wikipedia.org/wiki/Thomas_Bayes
http://mindhacks.cn/2008/07/07/the-importance-of-knowing-why/
http://blog.csdn.net/g9yuayon/article/details/2574781
http://blog.csdn.net/pongba/article/details/2544933
http://www.chinaunix.net/old_jh/14/412857.html
http://blog.chinaunix.net/uid-10182882-id-2969692.html
```</p>
]]></content>
  </entry>
  
</feed>
