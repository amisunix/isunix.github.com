<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2015-12-11T10:59:24+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use Python Request to Download Movies]]></title>
    <link href="http://isunix.github.io/blog/2015/12/04/use-python-request-to-download-movies/"/>
    <updated>2015-12-04T14:50:25+08:00</updated>
    <id>http://isunix.github.io/blog/2015/12/04/use-python-request-to-download-movies</id>
    <content type="html"><![CDATA[<p>This post shows a working way to download movies using python requests module.</p>

<p>```py
import requests
import re
import sys</p>

<p>class MovieDownload:
    def <strong>init</strong>(self, url):
        self.url = url
        if self.url.<strong>contains</strong>(‘//’):
            self.download_movie()
        else:
            print(“wrong url entered”)</p>

<pre><code>def download_movie(self):
    r = requests.get(self.url)
    pattern_title = re.compile('&lt;h2 class="entry_title"&gt;(.*?)&lt;/h2&gt;')
    title = re.findall(pattern_title, r.text)[0].split('/')[0]
    pattern_to_download = re.compile('&lt;li&gt;&lt;a href="(.*?)"&gt;.*?1024\.mkv.*?&lt;/a&gt;')
    movie_urls = re.findall(pattern_to_download, r.text)

    with open('movie.txt', 'w') as f:
        print("There are {} urls here!\n".format(len(movie_urls)))
        f.write("There are {} urls here!\n\n".format(len(movie_urls)))
        for movie_url in movie_urls:
            print("{}\n".format(movie_url))
            f.write("{}\n\n".format(movie_url))
</code></pre>

<p>url = “http://cn163.net/archives/3639/”
MovieDownload(url)</p>

<p>sys.exit(0)
```</p>

<p>and then execute the script as:</p>

<p><code>sh
python3 movie_download.py
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Underscore in Python's Variable Name]]></title>
    <link href="http://isunix.github.io/blog/2015/11/23/underscore-in-pythons-variable-name/"/>
    <updated>2015-11-23T13:37:08+08:00</updated>
    <id>http://isunix.github.io/blog/2015/11/23/underscore-in-pythons-variable-name</id>
    <content type="html"><![CDATA[<p>Found a very complete article about the “underscore” in python’s usage.</p>

<p><code>html
http://my.oschina.net/leejun2005/blog/387136
</code></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pycharm Shortcuts]]></title>
    <link href="http://isunix.github.io/blog/2015/11/20/pycharm-shortcuts/"/>
    <updated>2015-11-20T18:47:53+08:00</updated>
    <id>http://isunix.github.io/blog/2015/11/20/pycharm-shortcuts</id>
    <content type="html"><![CDATA[<p>The following are some notes on using pycharm.</p>

<p>1.shortcuts</p>

<p><code>sh
cmd+O           (search class)
cmd+shift+O     (search file name)
cmd+alt+O       (go to symbol), then hit cmd+y to get a preview, hit enter will jump to the code.
by ctrl+clicking a method name, you will be redirected to its definition.
for a html file, type "!" then type "tab" key will give a basic html5 template.
for flask project, in the .py file, type 'flaskp' and hit "tab", will give you the definition of post method.
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Ptpython With Python3 as the Backend]]></title>
    <link href="http://isunix.github.io/blog/2015/11/19/using-ptpython-with-python3-as-the-backend/"/>
    <updated>2015-11-19T12:32:02+08:00</updated>
    <id>http://isunix.github.io/blog/2015/11/19/using-ptpython-with-python3-as-the-backend</id>
    <content type="html"><![CDATA[<p>I want to use ptpython with python3 as the interpreter, here is how:</p>

<p><code>sh
pip3 install ptpython
python3 -m ptpython
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resources for Learning Wsgi]]></title>
    <link href="http://isunix.github.io/blog/2015/10/27/resources-for-learning-wsgi/"/>
    <updated>2015-10-27T16:14:52+08:00</updated>
    <id>http://isunix.github.io/blog/2015/10/27/resources-for-learning-wsgi</id>
    <content type="html"><![CDATA[<p>Here below are some resources I used to learn wsgi and tornado werkzeug.</p>

<ol>
  <li>wsgi:</li>
</ol>

<p><code>html
https://brodie.io/journal/why-wsgi/
http://wsgi.readthedocs.org/en/latest/what.html
https://www.python.org/dev/peps/pep-3333/
http://wsgi.readthedocs.org/en/latest/learn.html
http://wsgi.tutorial.codepoint.net/
http://linuxgazette.net/115/orr.html
</code></p>

<ol>
  <li>werkzeug:</li>
</ol>

<p><code>html
http://werkzeug.pocoo.org/
https://github.com/mitsuhiko/werkzeug
</code></p>

<ol>
  <li>websocket:</li>
</ol>

<p><code>html
http://buildnewgames.com/websockets/
http://rz.scale-it.pl/2013/01/25/tornado___the_best_web_framework.html
</code></p>
]]></content>
  </entry>
  
</feed>
