<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shell | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2015-11-02T15:46:27+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Libevent Not Found Error While Install Tmux]]></title>
    <link href="http://isunix.github.io/blog/2014/12/24/libevent-not-found-error-while-install-tmux/"/>
    <updated>2014-12-24T21:13:11+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/24/libevent-not-found-error-while-install-tmux</id>
    <content type="html"><![CDATA[<p>While I was installing tmux on cent-os, I met the error saying that “libevent not found”, something like this. Then I download libevent and install it into the location ‘/home/stsun/local’ dir.</p>

<p>Still I get the error saying that “libevent not found”. I solved the problem by the following way.</p>

<p><code>sh
DIR="$HOME/local"
./configure --prefix=$DIR CFLAGS="-I$DIR/include" LDFLAGS="-L$DIR/lib"
</code></p>

<p>Since I install libevent with the option, “–prefix=$HOME/local”.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Make Zsh the Default Shell Without Root Access]]></title>
    <link href="http://isunix.github.io/blog/2014/12/24/how-to-make-zsh-the-default-shell-without-root-access/"/>
    <updated>2014-12-24T19:01:06+08:00</updated>
    <id>http://isunix.github.io/blog/2014/12/24/how-to-make-zsh-the-default-shell-without-root-access</id>
    <content type="html"><![CDATA[<p>As depicted by the title, this post keeps notes on how to make zsh the default shell without root access. BTW, I am using oh-my-zsh configuration files.</p>

<p>In the .bash_profile, add the following lines,</p>

<p><code>sh
export SHELL=/bin/zsh
exec /bin/zsh -l
</code></p>

<p>Where zsh will be your own location of your zsh file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Shell Scripts]]></title>
    <link href="http://isunix.github.io/blog/2014/11/10/notes-on-shell-scripts/"/>
    <updated>2014-11-10T16:40:55+08:00</updated>
    <id>http://isunix.github.io/blog/2014/11/10/notes-on-shell-scripts</id>
    <content type="html"><![CDATA[<p>While reading some of the scripts written by my colleagus, I found some usages to be quite tricky. Thus I keep a note of the usage here.</p>

<p>1.filename and extension parts</p>

<p><code>sh
echo `basename $PWD` # Basename of current working directory.
echo "${PWD##*/}" # Basename of current working directory.
echo
echo `basename $0` # Name of script.
echo $0 # Name of script.
echo "${0##*/}" # Name of script.
echo
filename=test.data
echo "${filename##*.}" # data
# Extension of filename.
</code>  </p>

<p>2.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bash Script to List All Methods in a Perl Module]]></title>
    <link href="http://isunix.github.io/blog/2014/09/25/bash-script-to-list-all-methods-in-a-perl-module/"/>
    <updated>2014-09-25T16:21:52+08:00</updated>
    <id>http://isunix.github.io/blog/2014/09/25/bash-script-to-list-all-methods-in-a-perl-module</id>
    <content type="html"><![CDATA[<p>In the post “Dynamicly Adding a Method to a Module”, I showed how to use a perl one-liner to list all the methods in a module.  </p>

<p>I will show how to do it in a shell script thus we can accept the module on the command line, </p>

<p><code>sh
#!/bin/bash
perl -e "use Data::Dumper; use $1; print Dumper \%$1::"
</code></p>

]]></content>
  </entry>
  
</feed>
