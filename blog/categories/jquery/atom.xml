<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQuery | Steven's Blog]]></title>
  <link href="http://isunix.github.io/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://isunix.github.io/"/>
  <updated>2014-09-29T21:51:43+08:00</updated>
  <id>http://isunix.github.io/</id>
  <author>
    <name><![CDATA[Steven Sun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Jquery 拾遗]]></title>
    <link href="http://isunix.github.io/blog/2014/08/05/jquery-shi-yi/"/>
    <updated>2014-08-05T11:18:49+08:00</updated>
    <id>http://isunix.github.io/blog/2014/08/05/jquery-shi-yi</id>
    <content type="html"><![CDATA[<p>This blog post is about some of the usages of jQuery while I am learning and using jQuery. I keep a note of it so that I can pick it up conveniently later.  </p>

<ol>
  <li>append a paragraph to the front of your body.  </li>
</ol>

<p>```js</p>

<p>var para = $(“&lt;p&gt;”, {“text”: “I’m a new paragraph!”, “css”:{“background”:”yellow”}});
$(“body”).prepend(para)</p>

<p>```  </p>

<p>and also we can do it using the “prepentTo” method.  </p>

<p>```js</p>

<p>$(“&lt;p&gt;”, {“text”: “I’m a new people!”, “css”:{“background”:”red”}}).prependTo(“body”);</p>

<p>```   </p>

<p>If we want to insert before/after an element, we can use the following method.  </p>

<p>```js  </p>

<p>$(“&lt;p&gt;”, {“text”: “a new paragraph.”}).insertAfter(“p.foo”); </p>

<p>```   </p>

<p>For the “wrap” method, it is like this:  </p>

<p>```js</p>

<p>$(“span”).wrap(“<strong />”);</p>

<p>```
This will wrap all “span”” tag with “strong” tag. Or we can have the nested tags inside “wrap”:  </p>

<p>```js</p>

<p>$(“span”).wrap(“<strong><em /></strong>”);</p>

<p>```</p>

<ol>
  <li>We can also use callback function to do some selective adding.  </li>
</ol>

<p>```js</p>

<p>$(“span”).wrap(function(){return $(this).is(“.foo”) ? “<strong>” : “<em>”});</em></strong></p>

<p>```  </p>

<ol>
  <li>to get the last id attributes of a paragraph:  </li>
</ol>

<p>```js</p>

<p>$(“p:eq(3)”).attr(“id”);</p>

<p>```
and to modify its id to “bar”, we can do this:  </p>

<p>```js  </p>

<p>$(“#bar”).attr(“id”, “bat”)</p>

<p>```</p>

<ol>
  <li>if you want to remove an attribute from an element, we can use the “removeAttr” method.  </li>
</ol>

<p>```js </p>

<p>$(“:checkbox”).removeAttr(“disabled”);</p>

<p>```  </p>

<ol>
  <li>
    <p>text() can just act on “text”, while html() can act on html contents.   </p>
  </li>
  <li>
    <p>.val() is used to get the value or content of a form element, like:  </p>
  </li>
</ol>

<p>```js</p>

<p>$(“:submit”).val();</p>

<p>```  </p>

<p>or  </p>

<p>```js </p>

<p>$(“:submit”).val(“Sign IN”);</p>

<p>```</p>

<ol>
  <li>
    <p>.addClass(), .removeClass(), .toggleClass() are also 3 often used methods.   </p>
  </li>
  <li>
    <p>.map() and .each(), .show() and .hide(), .fadeIn(), .fadeOut(), .fadeTo() , these are common methods. </p>
  </li>
</ol>
]]></content>
  </entry>
  
</feed>
